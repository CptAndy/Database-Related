-- Author: Anderson Mota
-- MySQL Script generated by MySQL Workbench
-- Thu Jan 30 15:17:00 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema transcoreDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema transcoreDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `transcoreDB` DEFAULT CHARACTER SET utf8 ;
USE `transcoreDB` ;

-- -----------------------------------------------------
-- Table `transcoreDB`.`requirements`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `transcoreDB`.`requirements` ;

CREATE TABLE IF NOT EXISTS `transcoreDB`.`requirements` (
  `req_id` INT NOT NULL AUTO_INCREMENT COMMENT 'Requirement identification for DB purposes of modifying/altering',
  `req_num` VARCHAR(45) NOT NULL COMMENT '- The requirement number ex. (11.1.1) \n- Cannot be blank\n- Must be unique to prevent duplicates',
  `req_desc` LONGTEXT NOT NULL COMMENT '- Actual description of requirement\n- Cannot be blank\n- Must be unique to prevent duplicates',
  PRIMARY KEY (`req_id`),
  UNIQUE INDEX `req_num_UNIQUE` (`req_num` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `transcoreDB`.`priority`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `transcoreDB`.`priority` ;

CREATE TABLE IF NOT EXISTS `transcoreDB`.`priority` (
  `pri_id` INT NOT NULL AUTO_INCREMENT COMMENT 'Priority identification for DB purposes of modifying/altering\n',
  `pri_num` VARCHAR(45) NOT NULL COMMENT '- Labeled P0 - P4 (urgent - not urgent)\n- Used for identifying which task to accomplish first in order of importance\n- Must be unique to prevent duplicates',
  `pri_text` VARCHAR(45) NOT NULL COMMENT '- Description of the priority levels',
  PRIMARY KEY (`pri_id`),
  UNIQUE INDEX `pri_num_UNIQUE` (`pri_num` ASC) VISIBLE,
  UNIQUE INDEX `pri_text_UNIQUE` (`pri_text` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `transcoreDB`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `transcoreDB`.`status` ;

CREATE TABLE IF NOT EXISTS `transcoreDB`.`status` (
  `status_id` INT NOT NULL AUTO_INCREMENT COMMENT ' status_id identification for DB purposes of modifying/altering\n- Will use this one primarily for working with to avoid confusion/ repetitive input',
  `status_desc` VARCHAR(100) NOT NULL COMMENT '- Description of status\n- Not Started: Project has been approved but work has not begun yet.\n- Active: Currently being worked on by the team.\n- In Progress: Work is actively happening on the project.\n- On Hold: Work has been paused temporarily, usually due to pending information or external factors.\n- Blocked: Progress is stalled due to a specific issue that needs to be resolved.\n- Pending Review: Awaiting feedback from stakeholders before moving forward.\n- Completed: All project tasks have been finished and deliverables are ready.\n- Cancelled: Project has been officially stopped and will not be continued.\n- Overdue: Project deadline has passed and work is still ongoing',
  PRIMARY KEY (`status_id`),
  UNIQUE INDEX `status_desc_UNIQUE` (`status_desc` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `transcoreDB`.`tracking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `transcoreDB`.`tracking` ;

CREATE TABLE IF NOT EXISTS `transcoreDB`.`tracking` (
  `track_id` INT NOT NULL AUTO_INCREMENT COMMENT 'Tracking identification for DB purposes of modifying/altering',
  `req_id` INT NULL DEFAULT NULL,
  `status_id` INT NULL DEFAULT NULL,
  `pri_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`track_id`),
  INDEX `req_id_idx` (`req_id` ASC) VISIBLE,
  INDEX `status_id_idx` (`status_id` ASC) VISIBLE,
  INDEX `pri_id_idx` (`pri_id` ASC) VISIBLE,
  CONSTRAINT `req_id`
    FOREIGN KEY (`req_id`)
    REFERENCES `transcoreDB`.`requirements` (`req_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `status_id`
    FOREIGN KEY (`status_id`)
    REFERENCES `transcoreDB`.`status` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `pri_id`
    FOREIGN KEY (`pri_id`)
    REFERENCES `transcoreDB`.`priority` (`pri_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- VIEW `transcoreDB`. [TABLE_NAME}
-- -----------------------------------------------------
DROP VIEW IF EXISTS v_tracking_log;
DROP VIEW IF EXISTS v_progress_log;

-------- CHECKS FOR EXISTING VIEW TO DROP UNCOMMENT WHEN NEEDED COPY/PASTE OUTPUT WITHOUT QUOTES TO RUN -------- 
-- SELECT CONCAT('DROP VIEW IF EXISTS `', TABLE_NAME, '`;') AS drop_statements
-- FROM INFORMATION_SCHEMA.VIEWS
-- WHERE TABLE_SCHEMA = 'transcoreDB';




SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
